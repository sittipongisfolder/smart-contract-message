import React, { useState, useEffect } from "react";
import axios from "axios";
import Web3 from "web3";

const App = () => {
  const [message, setMessage] = useState("");
  const [newMessage, setNewMessage] = useState("");
  const [loading, setLoading] = useState(false); // ‡πÄ‡∏û‡∏¥‡πà‡∏° state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Loading

  useEffect(() => {
    fetchMessage();
  }, []);

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å Smart Contract
  const fetchMessage = async () => {
    try {
      const response = await axios.get("http://localhost:5000/message");
      setMessage(response.data.message);
    } catch (error) {
      console.error("‚ùå Error fetching message:", error);
    }
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á Smart Contract
  const updateMessage = async () => {
    if (!newMessage || newMessage.trim() === "") {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï!");
        return;
    }

    try {
        setLoading(true); // ‡πÄ‡∏£‡∏¥‡πà‡∏° Loading
        const response = await axios.post("http://localhost:5000/message", {
            message: newMessage, // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å `newMessage` ‡πÄ‡∏õ‡πá‡∏ô `message`
        });

        console.log("‚úÖ Transaction Hash:", response.data.transactionHash);
        alert("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üéâ");

        setNewMessage(""); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πà‡∏≠‡∏á input
        fetchMessage(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Smart Contract
    } catch (error) {
        console.error("‚ùå Error updating message:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°");
    } finally {
        setLoading(false); // ‡∏õ‡∏¥‡∏î Loading
    }
};


  return (
    <div style={{ textAlign: "center", marginTop: "50px" }}>
      <h1>Smart Contract Message</h1>
      <p>Message: <strong>{message}</strong></p>

      <input
        type="text"
        placeholder=" "
        value={newMessage}
        onChange={(e) => setNewMessage(e.target.value)}
        disabled={loading} // ‡∏õ‡∏¥‡∏î input ‡∏Ç‡∏ì‡∏∞‡πÇ‡∏´‡∏•‡∏î
      />
      
      <button onClick={updateMessage} disabled={loading}>
        {loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï..." : "Update Message"}
      </button>
    </div>
  );
};

export default App;
